{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kshitij\\\\Desktop\\\\spectagram-stage-9\\\\screens\\\\CreatePost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport firebase from \"firebase\";\n\nvar CreatePost = function (_Component) {\n  _inherits(CreatePost, _Component);\n\n  var _super = _createSuper(CreatePost);\n\n  function CreatePost(props) {\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      previewImage: \"image_1\",\n      dropdownHeight: 40,\n      light_theme: true,\n      name: \"\",\n      profile_image: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUser();\n    }\n  }, {\n    key: \"addPost\",\n    value: function addPost() {\n      var postData;\n      return _regeneratorRuntime.async(function addPost$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.state.caption) {\n                _context.next = 8;\n                break;\n              }\n\n              postData = {\n                preview_image: this.state.previewImage,\n                caption: this.state.caption,\n                author: firebase.auth().currentUser.displayName,\n                created_on: new Date(),\n                author_uid: firebase.auth().currentUser.uid,\n                profile_image: this.state.profile_image,\n                likes: 0\n              };\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"/posts/\" + Math.random().toString(36).slice(2)).set(postData).then(function (snapshot) {}));\n\n            case 4:\n              this.props.setUpdateToTrue();\n              this.props.navigation.navigate(\"Feed\");\n              _context.next = 9;\n              break;\n\n            case 8:\n              Alert.alert(\"Error\", \"All fields are required!\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return console.log(\"OK Pressed\");\n                }\n              }], {\n                cancelable: false\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetchUser\",\n    value: function fetchUser() {\n      var theme, name, image;\n      return _regeneratorRuntime.async(function fetchUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n                theme = snapshot.val().current_theme;\n                name = snapshot.val().first_name + \" \" + snapshot.val().last_name;\n                image = snapshot.val().profile_picture;\n              }));\n\n            case 2:\n              this.setState({\n                light_theme: theme === \"light\" ? true : false,\n                name: name,\n                profile_image: image\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var preview_images = {\n        image_1: require(\"../assets/image_1.jpg\"),\n        image_2: require(\"../assets/image_2.jpg\"),\n        image_3: require(\"../assets/image_3.jpg\"),\n        image_4: require(\"../assets/image_4.jpg\"),\n        image_5: require(\"../assets/image_5.jpg\"),\n        image_6: require(\"../assets/image_6.jpg\"),\n        image_7: require(\"../assets/image_7.jpg\")\n      };\n      return React.createElement(View, {\n        style: this.state.light_theme ? styles.containerLight : styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.droidSafeArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.appTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.appIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.iconImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.appTitleTextContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, \"New Post\"))), React.createElement(View, {\n        style: styles.fieldsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: preview_images[this.state.previewImage],\n        style: styles.previewImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          height: RFValue(this.state.dropdownHeight)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, React.createElement(DropDownPicker, {\n        items: [{\n          label: \"Image 1\",\n          value: \"image_1\"\n        }, {\n          label: \"Image 2\",\n          value: \"image_2\"\n        }, {\n          label: \"Image 3\",\n          value: \"image_3\"\n        }, {\n          label: \"Image 4\",\n          value: \"image_4\"\n        }, {\n          label: \"Image 5\",\n          value: \"image_5\"\n        }, {\n          label: \"Image 6\",\n          value: \"image_6\"\n        }, {\n          label: \"Image 7\",\n          value: \"image_7\"\n        }],\n        defaultValue: this.state.previewImage,\n        containerStyle: {\n          height: 40,\n          borderRadius: 20,\n          marginBottom: 10\n        },\n        onOpen: function onOpen() {\n          _this2.setState({\n            dropdownHeight: 170\n          });\n        },\n        onClose: function onClose() {\n          _this2.setState({\n            dropdownHeight: 40\n          });\n        },\n        style: {\n          backgroundColor: \"transparent\"\n        },\n        itemStyle: {\n          justifyContent: \"flex-start\"\n        },\n        dropDownStyle: {\n          backgroundColor: this.state.light_theme ? \"#eee\" : \"#2a2a2a\"\n        },\n        labelStyle: {\n          color: this.state.light_theme ? \"black\" : \"white\"\n        },\n        arrowStyle: {\n          color: this.state.light_theme ? \"black\" : \"white\"\n        },\n        onChangeItem: function onChangeItem(item) {\n          return _this2.setState({\n            previewImage: item.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      })), React.createElement(TextInput, {\n        style: this.state.light_theme ? styles.inputFontLight : styles.inputFont,\n        onChangeText: function onChangeText(caption) {\n          return _this2.setState({\n            caption: caption\n          });\n        },\n        placeholder: \"Caption\",\n        placeholderTextColor: this.state.light_theme ? \"black\" : \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.submitButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.addPost();\n        },\n        title: \"Submit\",\n        color: \"#841584\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      })))), React.createElement(View, {\n        style: {\n          flex: 0.08\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return CreatePost;\n}(Component);\n\nexport { CreatePost as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28)\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: 28,\n    paddingLeft: 20\n  },\n  fieldsContainer: {\n    flex: 0.85\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(10),\n    resizeMode: \"contain\"\n  },\n  inputFont: {\n    height: RFValue(40),\n    borderColor: \"white\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"white\"\n  },\n  inputFontLight: {\n    height: 40,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingLeft: 10,\n    color: \"black\"\n  },\n  submitButton: {\n    marginTop: RFValue(20),\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/kshitij/Desktop/spectagram-stage-9/screens/CreatePost.js"],"names":["React","Component","RFValue","DropDownPicker","firebase","CreatePost","props","state","previewImage","dropdownHeight","light_theme","name","profile_image","fetchUser","caption","postData","preview_image","author","auth","currentUser","displayName","created_on","Date","author_uid","uid","likes","database","ref","Math","random","toString","slice","set","then","snapshot","setUpdateToTrue","navigation","navigate","Alert","alert","text","onPress","console","log","cancelable","on","theme","val","current_theme","first_name","last_name","image","profile_picture","setState","preview_images","image_1","require","image_2","image_3","image_4","image_5","image_6","image_7","styles","containerLight","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleTextLight","appTitleText","fieldsContainer","height","label","value","borderRadius","marginBottom","backgroundColor","justifyContent","color","item","inputFontLight","inputFont","submitButton","addPost","flex","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","alignItems","width","resizeMode","fontSize","paddingLeft","alignSelf","marginVertical","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    SafeAreaView,\r\n    Platform,\r\n    StatusBar,\r\n    Image,\r\n    ScrollView,\r\n    TextInput,\r\n    Button\r\n} from \"react-native\";\r\n\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport DropDownPicker from \"react-native-dropdown-picker\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nexport default class CreatePost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            previewImage: \"image_1\",\r\n            dropdownHeight: 40,\r\n            light_theme: true,\r\n            name: \"\",\r\n            profile_image: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUser();\r\n    }\r\n\r\n    async addPost() {\r\n        if (\r\n            this.state.caption\r\n        ) {\r\n            let postData = {\r\n                preview_image: this.state.previewImage,\r\n                caption: this.state.caption,\r\n                author: firebase.auth().currentUser.displayName,\r\n                created_on: new Date(),\r\n                author_uid: firebase.auth().currentUser.uid,\r\n                profile_image: this.state.profile_image,\r\n                likes: 0\r\n            };\r\n            await firebase\r\n                .database()\r\n                .ref(\r\n                    \"/posts/\" +\r\n                    Math.random()\r\n                        .toString(36)\r\n                        .slice(2)\r\n                )\r\n                .set(postData)\r\n                .then(function (snapshot) { });\r\n            this.props.setUpdateToTrue();\r\n            this.props.navigation.navigate(\"Feed\");\r\n        } else {\r\n            Alert.alert(\r\n                \"Error\",\r\n                \"All fields are required!\",\r\n                [{ text: \"OK\", onPress: () => console.log(\"OK Pressed\") }],\r\n                { cancelable: false }\r\n            );\r\n        }\r\n    }\r\n\r\n    async fetchUser() {\r\n        let theme, name, image;\r\n        await firebase\r\n            .database()\r\n            .ref(\"/users/\" + firebase.auth().currentUser.uid)\r\n            .on(\"value\", function (snapshot) {\r\n                theme = snapshot.val().current_theme;\r\n                name = `${snapshot.val().first_name} ${snapshot.val().last_name}`;\r\n                image = snapshot.val().profile_picture;\r\n            });\r\n        this.setState({\r\n            light_theme: theme === \"light\" ? true : false,\r\n            name: name,\r\n            profile_image: image\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let preview_images = {\r\n            image_1: require(\"../assets/image_1.jpg\"),\r\n            image_2: require(\"../assets/image_2.jpg\"),\r\n            image_3: require(\"../assets/image_3.jpg\"),\r\n            image_4: require(\"../assets/image_4.jpg\"),\r\n            image_5: require(\"../assets/image_5.jpg\"),\r\n            image_6: require(\"../assets/image_6.jpg\"),\r\n            image_7: require(\"../assets/image_7.jpg\")\r\n        };\r\n        return (\r\n            <View style={this.state.light_theme ? styles.containerLight : styles.container}>\r\n                <SafeAreaView style={styles.droidSafeArea} />\r\n                <View style={styles.appTitle}>\r\n                    <View style={styles.appIcon}>\r\n                        <Image\r\n                            source={require(\"../assets/logo.png\")}\r\n                            style={styles.iconImage}\r\n                        ></Image>\r\n                    </View>\r\n                    <View style={styles.appTitleTextContainer}>\r\n                        <Text style={this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText}>New Post</Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.fieldsContainer}>\r\n                    <ScrollView>\r\n                        <Image\r\n                            source={preview_images[this.state.previewImage]}\r\n                            style={styles.previewImage}\r\n                        ></Image>\r\n                        <View style={{ height: RFValue(this.state.dropdownHeight) }}>\r\n                            <DropDownPicker\r\n                                items={[\r\n                                    { label: \"Image 1\", value: \"image_1\" },\r\n                                    { label: \"Image 2\", value: \"image_2\" },\r\n                                    { label: \"Image 3\", value: \"image_3\" },\r\n                                    { label: \"Image 4\", value: \"image_4\" },\r\n                                    { label: \"Image 5\", value: \"image_5\" },\r\n                                    { label: \"Image 6\", value: \"image_6\" },\r\n                                    { label: \"Image 7\", value: \"image_7\" }\r\n                                ]}\r\n                                defaultValue={this.state.previewImage}\r\n                                containerStyle={{\r\n                                    height: 40,\r\n                                    borderRadius: 20,\r\n                                    marginBottom: 10\r\n                                }}\r\n                                onOpen={() => {\r\n                                    this.setState({ dropdownHeight: 170 });\r\n                                }}\r\n                                onClose={() => {\r\n                                    this.setState({ dropdownHeight: 40 });\r\n                                }}\r\n                                style={{ backgroundColor: \"transparent\" }}\r\n                                itemStyle={{\r\n                                    justifyContent: \"flex-start\"\r\n                                }}\r\n                                dropDownStyle={{ backgroundColor: this.state.light_theme ? \"#eee\" : \"#2a2a2a\" }}\r\n                                labelStyle={{\r\n                                    color: this.state.light_theme ? \"black\" : \"white\"\r\n                                }}\r\n                                arrowStyle={{\r\n                                    color: this.state.light_theme ? \"black\" : \"white\"\r\n                                }}\r\n                                onChangeItem={item =>\r\n                                    this.setState({\r\n                                        previewImage: item.value\r\n                                    })\r\n                                }\r\n                            />\r\n                        </View>\r\n\r\n                        <TextInput\r\n                            style={this.state.light_theme ? styles.inputFontLight : styles.inputFont}\r\n                            onChangeText={caption => this.setState({ caption })}\r\n                            placeholder={\"Caption\"}\r\n                            placeholderTextColor={this.state.light_theme ? \"black\" : \"white\"}\r\n                        />\r\n\r\n                        <View style={styles.submitButton}>\r\n                            <Button\r\n                                onPress={() => this.addPost()}\r\n                                title=\"Submit\"\r\n                                color=\"#841584\"\r\n                            />\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>\r\n                <View style={{ flex: 0.08 }} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"black\"\r\n    },\r\n    containerLight: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n    },\r\n    droidSafeArea: {\r\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\r\n    },\r\n    appTitle: {\r\n        flex: 0.07,\r\n        flexDirection: \"row\"\r\n    },\r\n    appIcon: {\r\n        flex: 0.3,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    iconImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        resizeMode: \"contain\"\r\n    },\r\n    appTitleTextContainer: {\r\n        flex: 0.7,\r\n        justifyContent: \"center\"\r\n    },\r\n    appTitleText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(28)\r\n    },\r\n    appTitleTextLight: {\r\n        color: \"black\",\r\n        fontSize: 28,\r\n        paddingLeft: 20\r\n    },\r\n    fieldsContainer: {\r\n        flex: 0.85\r\n    },\r\n    previewImage: {\r\n        width: \"93%\",\r\n        height: RFValue(250),\r\n        alignSelf: \"center\",\r\n        borderRadius: RFValue(10),\r\n        marginVertical: RFValue(10),\r\n        resizeMode: \"contain\"\r\n    },\r\n    inputFont: {\r\n        height: RFValue(40),\r\n        borderColor: \"white\",\r\n        borderWidth: RFValue(1),\r\n        borderRadius: RFValue(10),\r\n        paddingLeft: RFValue(10),\r\n        color: \"white\"\r\n    },\r\n    inputFontLight: {\r\n        height: 40,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        paddingLeft: 10,\r\n        color: \"black\"\r\n    },\r\n    submitButton: {\r\n        marginTop: RFValue(20),\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}