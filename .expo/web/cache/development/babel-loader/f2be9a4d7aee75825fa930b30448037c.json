{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kshitij\\\\Desktop\\\\spectagram-stage-9\\\\navigation\\\\DrawerNavigator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport StackNavigator from \"./StackNavigator\";\nimport Profile from \"../screens/Profile\";\nimport Logout from \"../screens/Logout\";\nimport firebase from \"firebase\";\nimport CustomSidebarMenu from \"../screens/CustomSidebarMenu\";\nvar Drawer = createDrawerNavigator();\n\nvar DrawerNavigator = function (_Component) {\n  _inherits(DrawerNavigator, _Component);\n\n  var _super = _createSuper(DrawerNavigator);\n\n  function DrawerNavigator(props) {\n    var _this;\n\n    _classCallCheck(this, DrawerNavigator);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      light_theme: true\n    };\n    return _this;\n  }\n\n  _createClass(DrawerNavigator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var theme;\n      firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n        theme = snapshot.val().current_theme;\n      });\n      this.setState({\n        light_theme: theme === \"light\" ? true : false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      return React.createElement(Drawer.Navigator, {\n        drawerContentOptions: {\n          activeTintColor: \"#e91e63\",\n          inactiveTintColor: this.state.light_theme ? \"black\" : \"white\",\n          itemStyle: {\n            marginVertical: 5\n          }\n        },\n        drawerContent: function drawerContent(props) {\n          return React.createElement(CustomSidebarMenu, _extends({}, props, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 41\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(Drawer.Screen, {\n        name: \"Home\",\n        component: StackNavigator,\n        options: {\n          unmountOnBlur: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        options: {\n          unmountOnBlur: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Logout\",\n        component: Logout,\n        options: {\n          unmountOnBlur: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DrawerNavigator;\n}(Component);\n\nexport { DrawerNavigator as default };","map":{"version":3,"sources":["C:/Users/kshitij/Desktop/spectagram-stage-9/navigation/DrawerNavigator.js"],"names":["React","Component","createDrawerNavigator","StackNavigator","Profile","Logout","firebase","CustomSidebarMenu","Drawer","DrawerNavigator","props","state","light_theme","theme","database","ref","auth","currentUser","uid","on","snapshot","val","current_theme","setState","activeTintColor","inactiveTintColor","itemStyle","marginVertical","unmountOnBlur"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,cAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,iBAAP;AAEA,IAAMC,MAAM,GAAGN,qBAAqB,EAApC;;IAEqBO,e;;;;;AACjB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAFe;AAKlB;;;;WAED,6BAAoB;AAChB,UAAIC,KAAJ;AACAP,MAAAA,QAAQ,CACHQ,QADL,GAEKC,GAFL,CAES,YAAYT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,CAA4BC,GAFjD,EAGKC,EAHL,CAGQ,OAHR,EAGiB,UAAUC,QAAV,EAAoB;AAC7BP,QAAAA,KAAK,GAAGO,QAAQ,CAACC,GAAT,GAAeC,aAAvB;AACH,OALL;AAMA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEC,KAAK,KAAK,OAAV,GAAoB,IAApB,GAA2B;AAA1C,OAAd;AACH;;;WAED,kBAAS;AAAA;;AACL,UAAIH,KAAK,GAAG,KAAKA,KAAjB;AACA,aACI,oBAAC,MAAD,CAAQ,SAAR;AACI,QAAA,oBAAoB,EAAE;AAClBc,UAAAA,eAAe,EAAE,SADC;AAElBC,UAAAA,iBAAiB,EAAE,KAAKd,KAAL,CAAWC,WAAX,GAAyB,OAAzB,GAAmC,OAFpC;AAGlBc,UAAAA,SAAS,EAAE;AAAEC,YAAAA,cAAc,EAAE;AAAlB;AAHO,SAD1B;AAMI,QAAA,aAAa,EAAE,uBAAAjB,KAAK;AAAA,iBAAI,oBAAC,iBAAD,eAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ;AAAA,SANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,MAAD,CAAQ,MAAR;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAEP,cAFf;AAGI,QAAA,OAAO,EAAE;AAAEyB,UAAAA,aAAa,EAAE;AAAjB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAaI,oBAAC,MAAD,CAAQ,MAAR;AACI,QAAA,IAAI,EAAC,SADT;AAEI,QAAA,SAAS,EAAExB,OAFf;AAGI,QAAA,OAAO,EAAE;AAAEwB,UAAAA,aAAa,EAAE;AAAjB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAkBI,oBAAC,MAAD,CAAQ,MAAR;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAEvB,MAFf;AAGI,QAAA,OAAO,EAAE;AAAEuB,UAAAA,aAAa,EAAE;AAAjB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CADJ;AA0BH;;;;EA/CwC3B,S;;SAAxBQ,e","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport StackNavigator from \"./StackNavigator\";\r\nimport Profile from \"../screens/Profile\";\r\nimport Logout from \"../screens/Logout\";\r\nimport firebase from \"firebase\";\r\n\r\nimport CustomSidebarMenu from \"../screens/CustomSidebarMenu\";\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nexport default class DrawerNavigator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            light_theme: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let theme;\r\n        firebase\r\n            .database()\r\n            .ref(\"/users/\" + firebase.auth().currentUser.uid)\r\n            .on(\"value\", function (snapshot) {\r\n                theme = snapshot.val().current_theme;\r\n            });\r\n        this.setState({ light_theme: theme === \"light\" ? true : false });\r\n    }\r\n\r\n    render() {\r\n        let props = this.props;\r\n        return (\r\n            <Drawer.Navigator\r\n                drawerContentOptions={{\r\n                    activeTintColor: \"#e91e63\",\r\n                    inactiveTintColor: this.state.light_theme ? \"black\" : \"white\",\r\n                    itemStyle: { marginVertical: 5 }\r\n                }}\r\n                drawerContent={props => <CustomSidebarMenu {...props} />}\r\n            >\r\n                <Drawer.Screen\r\n                    name=\"Home\"\r\n                    component={StackNavigator}\r\n                    options={{ unmountOnBlur: true }}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Profile\"\r\n                    component={Profile}\r\n                    options={{ unmountOnBlur: true }}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Logout\"\r\n                    component={Logout}\r\n                    options={{ unmountOnBlur: true }}\r\n                />\r\n            </Drawer.Navigator>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}