{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kshitij\\\\Desktop\\\\spectagram-stage-9\\\\screens\\\\Feed.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport PostCard from \"./PostCard\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport firebase from \"firebase\";\n\nvar Feed = function (_Component) {\n  _inherits(Feed, _Component);\n\n  var _super = _createSuper(Feed);\n\n  function Feed(props) {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _super.call(this, props);\n\n    _this.fetchUser = function () {\n      var theme;\n      firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n        theme = snapshot.val().current_theme;\n\n        _this.setState({\n          light_theme: theme === \"light\"\n        });\n      });\n    };\n\n    _this.fetchPosts = function () {\n      firebase.database().ref(\"/posts/\").on(\"value\", function (snapshot) {\n        var posts = [];\n\n        if (snapshot.val()) {\n          Object.keys(snapshot.val()).forEach(function (key) {\n            posts.push({\n              key: key,\n              value: snapshot.val()[key]\n            });\n          });\n        }\n\n        _this.setState({\n          posts: posts\n        });\n\n        _this.props.setUpdateToFalse();\n      }, function (errorObject) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var post = _ref.item;\n      return React.createElement(PostCard, {\n        post: post,\n        navigation: _this.props.navigation,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.state = {\n      light_theme: true,\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPosts();\n      this.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: this.state.light_theme ? styles.containerLight : styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.droidSafeArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.appTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.appIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.iconImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.appTitleTextContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"Spectagram\"))), !this.state.posts[0] ? React.createElement(View, {\n        style: styles.noPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.noPostsTextLight : styles.noPostsText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, \"No Posts Available\")) : React.createElement(View, {\n        style: styles.cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, React.createElement(FlatList, {\n        keyExtractor: this.keyExtractor,\n        data: this.state.posts,\n        renderItem: this.renderItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      })));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport { Feed as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.8,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28)\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28)\n  },\n  cardContainer: {\n    flex: 0.85\n  },\n  noPosts: {\n    flex: 0.85,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  noPostsTextLight: {\n    fontSize: RFValue(20)\n  },\n  noPostsText: {\n    color: \"white\",\n    fontSize: RFValue(20)\n  }\n});","map":{"version":3,"sources":["C:/Users/kshitij/Desktop/spectagram-stage-9/screens/Feed.js"],"names":["React","Component","RFValue","PostCard","FlatList","firebase","Feed","props","fetchUser","theme","database","ref","auth","currentUser","uid","on","snapshot","val","current_theme","setState","light_theme","fetchPosts","posts","Object","keys","forEach","key","push","value","setUpdateToFalse","errorObject","console","log","code","renderItem","post","item","navigation","keyExtractor","index","toString","state","styles","containerLight","container","droidSafeArea","appTitle","appIcon","require","iconImage","appTitleTextContainer","appTitleTextLight","appTitleText","noPosts","noPostsTextLight","noPostsText","cardContainer","StyleSheet","create","flex","backgroundColor","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAUA,SAASC,OAAT,QAAwB,kCAAxB;AACA,OAAOC,QAAP;AAEA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,I;;;;;AACjB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAQnBC,SARmB,GAQP,YAAM;AACd,UAAIC,KAAJ;AACAJ,MAAAA,QAAQ,CACHK,QADL,GAEKC,GAFL,CAES,YAAYN,QAAQ,CAACO,IAAT,GAAgBC,WAAhB,CAA4BC,GAFjD,EAGKC,EAHL,CAGQ,OAHR,EAGiB,UAACC,QAAD,EAAc;AACvBP,QAAAA,KAAK,GAAGO,QAAQ,CAACC,GAAT,GAAeC,aAAvB;;AACA,cAAKC,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAEX,KAAK,KAAK;AAAzB,SAAd;AACH,OANL;AAOH,KAjBkB;;AAAA,UAwBnBY,UAxBmB,GAwBN,YAAM;AACfhB,MAAAA,QAAQ,CACHK,QADL,GAEKC,GAFL,CAES,SAFT,EAGKI,EAHL,CAGQ,OAHR,EAGiB,UAACC,QAAD,EAAc;AACvB,YAAIM,KAAK,GAAG,EAAZ;;AACA,YAAIN,QAAQ,CAACC,GAAT,EAAJ,EAAoB;AAChBM,UAAAA,MAAM,CAACC,IAAP,CAAYR,QAAQ,CAACC,GAAT,EAAZ,EAA4BQ,OAA5B,CAAoC,UAAUC,GAAV,EAAe;AAC/CJ,YAAAA,KAAK,CAACK,IAAN,CAAW;AACPD,cAAAA,GAAG,EAAEA,GADE;AAEPE,cAAAA,KAAK,EAAEZ,QAAQ,CAACC,GAAT,GAAeS,GAAf;AAFA,aAAX;AAIH,WALD;AAMH;;AACD,cAAKP,QAAL,CAAc;AAAEG,UAAAA,KAAK,EAAEA;AAAT,SAAd;;AACA,cAAKf,KAAL,CAAWsB,gBAAX;AACH,OAfL,EAeO,UAAUC,WAAV,EAAuB;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,WAAW,CAACG,IAA9C;AACH,OAjBL;AAkBH,KA3CkB;;AAAA,UA8CnBC,UA9CmB,GA8CN,gBAAoB;AAAA,UAAXC,IAAW,QAAjBC,IAAiB;AAC7B,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAhB;AAAsB,QAAA,UAAU,EAAE,MAAK5B,KAAL,CAAW8B,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAhDkB;;AAAA,UAkDnBC,YAlDmB,GAkDJ,UAACF,IAAD,EAAOG,KAAP;AAAA,aAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,KAlDI;;AAEf,UAAKC,KAAL,GAAa;AACTrB,MAAAA,WAAW,EAAE,IADJ;AAETE,MAAAA,KAAK,EAAE;AAFE,KAAb;AAFe;AAMlB;;;;WAaD,6BAAoB;AAChB,WAAKD,UAAL;AACA,WAAKb,SAAL;AACH;;;WA8BD,kBAAS;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKiC,KAAL,CAAWrB,WAAX,GAAyBsB,MAAM,CAACC,cAAhC,GAAiDD,MAAM,CAACE,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEF,MAAM,CAACG,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAEC,OAAO,sBADnB;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACO,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWrB,WAAX,GAAyBsB,MAAM,CAACS,iBAAhC,GAAoDT,MAAM,CAACU,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAPJ,CAFJ,EAcQ,CAAC,KAAKX,KAAL,CAAWnB,KAAX,CAAiB,CAAjB,CAAD,GACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACW,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWrB,WAAX,GAAyBsB,MAAM,CAACY,gBAAhC,GAAmDZ,MAAM,CAACa,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,GAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AACI,QAAA,YAAY,EAAE,KAAKlB,YADvB;AAEI,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWnB,KAFrB;AAGI,QAAA,UAAU,EAAE,KAAKY,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAlBZ,CADJ;AA6BH;;;;EAnF6BjC,S;;SAAbK,I;AAsFrB,IAAMoC,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,SAAS,EAAE;AACPe,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BjB,EAAAA,cAAc,EAAE;AACZgB,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,eAAe,EAAE;AAFL,GALa;AAS7Bf,EAAAA,aAAa,EAAE;AACXgB,IAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,SAAS,CAACC,aAAtC,GAAsD/D,OAAO,CAAC,EAAD;AAD7D,GATc;AAY7B4C,EAAAA,QAAQ,EAAE;AACNa,IAAAA,IAAI,EAAE,IADA;AAENO,IAAAA,aAAa,EAAE;AAFT,GAZmB;AAgB7BnB,EAAAA,OAAO,EAAE;AACLY,IAAAA,IAAI,EAAE,GADD;AAELQ,IAAAA,cAAc,EAAE,QAFX;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAhBoB;AAqB7BnB,EAAAA,SAAS,EAAE;AACPoB,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,UAAU,EAAE;AAHL,GArBkB;AA0B7BrB,EAAAA,qBAAqB,EAAE;AACnBS,IAAAA,IAAI,EAAE,GADa;AAEnBQ,IAAAA,cAAc,EAAE;AAFG,GA1BM;AA8B7Bf,EAAAA,YAAY,EAAE;AACVoB,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAEvE,OAAO,CAAC,EAAD;AAFP,GA9Be;AAkC7BiD,EAAAA,iBAAiB,EAAE;AACfqB,IAAAA,KAAK,EAAE,OADQ;AAEfC,IAAAA,QAAQ,EAAEvE,OAAO,CAAC,EAAD;AAFF,GAlCU;AAsC7BsD,EAAAA,aAAa,EAAE;AACXG,IAAAA,IAAI,EAAE;AADK,GAtCc;AAyC7BN,EAAAA,OAAO,EAAE;AACLM,IAAAA,IAAI,EAAE,IADD;AAELQ,IAAAA,cAAc,EAAE,QAFX;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAzCoB;AA8C7Bd,EAAAA,gBAAgB,EAAE;AACdmB,IAAAA,QAAQ,EAAEvE,OAAO,CAAC,EAAD;AADH,GA9CW;AAiD7BqD,EAAAA,WAAW,EAAE;AACTiB,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,QAAQ,EAAEvE,OAAO,CAAC,EAAD;AAFR;AAjDgB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    SafeAreaView,\r\n    Platform,\r\n    StatusBar,\r\n    Image\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport PostCard from \"./PostCard\";\r\n\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nexport default class Feed extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            light_theme: true,\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    fetchUser = () => {\r\n        let theme;\r\n        firebase\r\n            .database()\r\n            .ref(\"/users/\" + firebase.auth().currentUser.uid)\r\n            .on(\"value\", (snapshot) => {\r\n                theme = snapshot.val().current_theme\r\n                this.setState({ light_theme: theme === \"light\" })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts();\r\n        this.fetchUser();\r\n    }\r\n\r\n    fetchPosts = () => {\r\n        firebase\r\n            .database()\r\n            .ref(\"/posts/\")\r\n            .on(\"value\", (snapshot) => {\r\n                let posts = []\r\n                if (snapshot.val()) {\r\n                    Object.keys(snapshot.val()).forEach(function (key) {\r\n                        posts.push({\r\n                            key: key,\r\n                            value: snapshot.val()[key]\r\n                        })\r\n                    });\r\n                }\r\n                this.setState({ posts: posts })\r\n                this.props.setUpdateToFalse();\r\n            }, function (errorObject) {\r\n                console.log(\"The read failed: \" + errorObject.code);\r\n            })\r\n    }\r\n\r\n\r\n    renderItem = ({ item: post }) => {\r\n        return <PostCard post={post} navigation={this.props.navigation} />;\r\n    };\r\n\r\n    keyExtractor = (item, index) => index.toString();\r\n\r\n    render() {\r\n        return (\r\n            <View style={this.state.light_theme ? styles.containerLight : styles.container}>\r\n                <SafeAreaView style={styles.droidSafeArea} />\r\n                <View style={styles.appTitle}>\r\n                    <View style={styles.appIcon}>\r\n                        <Image\r\n                            source={require(\"../assets/logo.png\")}\r\n                            style={styles.iconImage}\r\n                        ></Image>\r\n                    </View>\r\n                    <View style={styles.appTitleTextContainer}>\r\n                        <Text style={this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText}>Spectagram</Text>\r\n                    </View>\r\n                </View>\r\n                {\r\n                    !this.state.posts[0] ?\r\n                        <View style={styles.noPosts}>\r\n                            <Text style={this.state.light_theme ? styles.noPostsTextLight : styles.noPostsText}>No Posts Available</Text>\r\n                        </View> :\r\n                        <View style={styles.cardContainer}>\r\n                            <FlatList\r\n                                keyExtractor={this.keyExtractor}\r\n                                data={this.state.posts}\r\n                                renderItem={this.renderItem}\r\n                            />\r\n                        </View>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"black\"\r\n    },\r\n    containerLight: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n    },\r\n    droidSafeArea: {\r\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\r\n    },\r\n    appTitle: {\r\n        flex: 0.07,\r\n        flexDirection: \"row\"\r\n    },\r\n    appIcon: {\r\n        flex: 0.2,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    iconImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        resizeMode: \"contain\"\r\n    },\r\n    appTitleTextContainer: {\r\n        flex: 0.8,\r\n        justifyContent: \"center\"\r\n    },\r\n    appTitleText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(28),\r\n    },\r\n    appTitleTextLight: {\r\n        color: \"black\",\r\n        fontSize: RFValue(28)\r\n    },\r\n    cardContainer: {\r\n        flex: 0.85\r\n    },\r\n    noPosts: {\r\n        flex: 0.85,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    noPostsTextLight: {\r\n        fontSize: RFValue(20),\r\n    },\r\n    noPostsText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(20),\r\n    }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}