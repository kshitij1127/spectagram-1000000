{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kshitij\\\\Desktop\\\\spectagram-stage-9\\\\screens\\\\PostCard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport firebase from \"firebase\";\n\nvar PostCard = function (_Component) {\n  _inherits(PostCard, _Component);\n\n  var _super = _createSuper(PostCard);\n\n  function PostCard(props) {\n    var _this;\n\n    _classCallCheck(this, PostCard);\n\n    _this = _super.call(this, props);\n\n    _this.fetchUser = function () {\n      var theme;\n      firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n        theme = snapshot.val().current_theme;\n\n        _this.setState({\n          light_theme: theme === \"light\"\n        });\n      });\n    };\n\n    _this.likeAction = function () {\n      if (_this.state.is_liked) {\n        firebase.database().ref(\"posts\").child(_this.state.post_id).child(\"likes\").set(firebase.database.ServerValue.increment(-1));\n\n        _this.setState({\n          likes: _this.state.likes -= 1,\n          is_liked: false\n        });\n      } else {\n        firebase.database().ref(\"posts\").child(_this.state.post_id).child(\"likes\").set(firebase.database.ServerValue.increment(1));\n\n        _this.setState({\n          likes: _this.state.likes += 1,\n          is_liked: true\n        });\n      }\n    };\n\n    _this.state = {\n      light_theme: true,\n      post_id: _this.props.post.key,\n      post_data: _this.props.post.value,\n      is_liked: false,\n      likes: _this.props.post.value.likes\n    };\n    return _this;\n  }\n\n  _createClass(PostCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var post = this.state.post_data;\n      var images = {\n        image_1: require(\"../assets/image_1.jpg\"),\n        image_2: require(\"../assets/image_2.jpg\"),\n        image_3: require(\"../assets/image_3.jpg\"),\n        image_4: require(\"../assets/image_4.jpg\"),\n        image_5: require(\"../assets/image_5.jpg\"),\n        image_6: require(\"../assets/image_6.jpg\"),\n        image_7: require(\"../assets/image_7.jpg\")\n      };\n      return React.createElement(TouchableOpacity, {\n        style: styles.container,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"PostScreen\", post = _this2.props.post);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: this.state.light_theme ? styles.cardContainerLight : styles.cardContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.authorContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.authorImageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: post.profile_image\n        },\n        style: styles.profileImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.authorNameContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.authorNameTextLight : styles.authorNameText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, post.author))), React.createElement(Image, {\n        source: images[post.preview_image],\n        style: styles.postImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.captionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.captionTextLight : styles.captionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, post.caption)), React.createElement(View, {\n        style: styles.actionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: this.state.is_liked ? styles.likeButtonLiked : styles.likeButtonDisliked,\n        onPress: function onPress() {\n          return _this2.likeAction();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, React.createElement(Ionicons, {\n        name: \"heart\",\n        size: RFValue(30),\n        color: this.state.light_theme ? \"black\" : \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: this.state.light_theme ? styles.likeTextLight : styles.likeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, this.state.likes)))));\n    }\n  }]);\n\n  return PostCard;\n}(Component);\n\nexport { PostCard as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  cardContainer: {\n    margin: RFValue(13),\n    backgroundColor: \"#2a2a2a\",\n    borderRadius: RFValue(20),\n    padding: RFValue(20)\n  },\n  cardContainerLight: {\n    margin: RFValue(13),\n    backgroundColor: \"white\",\n    borderRadius: RFValue(20),\n    shadowColor: \"rgb(0, 0, 0)\",\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    shadowOpacity: RFValue(0.5),\n    shadowRadius: RFValue(5),\n    elevation: RFValue(2),\n    padding: RFValue(20)\n  },\n  authorContainer: {\n    flex: 0.1,\n    flexDirection: \"row\"\n  },\n  authorImageContainer: {\n    flex: 0.15,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\",\n    borderRadius: RFValue(100)\n  },\n  authorNameContainer: {\n    flex: 0.85,\n    justifyContent: \"center\"\n  },\n  authorNameText: {\n    color: \"white\",\n    fontSize: RFValue(20)\n  },\n  authorNameTextLight: {\n    color: \"black\",\n    fontSize: RFValue(20)\n  },\n  postImage: {\n    marginTop: RFValue(20),\n    resizeMode: \"contain\",\n    width: \"100%\",\n    alignSelf: \"center\",\n    height: RFValue(275)\n  },\n  captionContainer: {},\n  captionText: {\n    fontSize: 13,\n    color: \"white\",\n    paddingTop: RFValue(10)\n  },\n  captionTextLight: {\n    fontSize: 13,\n    color: \"black\",\n    paddingTop: RFValue(10)\n  },\n  actionContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: RFValue(10)\n  },\n  likeButtonLiked: {\n    width: RFValue(160),\n    height: RFValue(40),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    backgroundColor: \"#eb3948\",\n    borderRadius: RFValue(30)\n  },\n  likeButtonDisliked: {\n    width: RFValue(160),\n    height: RFValue(40),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    borderColor: \"#eb3948\",\n    borderWidth: 2,\n    borderRadius: RFValue(30)\n  },\n  likeText: {\n    color: \"white\",\n    fontSize: 25,\n    marginLeft: 25,\n    marginTop: 6\n  },\n  likeTextLight: {\n    fontSize: 25,\n    marginLeft: 25,\n    marginTop: 6\n  }\n});","map":{"version":3,"sources":["C:/Users/kshitij/Desktop/spectagram-stage-9/screens/PostCard.js"],"names":["React","Component","Ionicons","RFValue","firebase","PostCard","props","fetchUser","theme","database","ref","auth","currentUser","uid","on","snapshot","val","current_theme","setState","light_theme","likeAction","state","is_liked","child","post_id","set","ServerValue","increment","likes","post","key","post_data","value","images","image_1","require","image_2","image_3","image_4","image_5","image_6","image_7","styles","container","navigation","navigate","cardContainerLight","cardContainer","authorContainer","authorImageContainer","uri","profile_image","profileImage","authorNameContainer","authorNameTextLight","authorNameText","author","preview_image","postImage","captionContainer","captionTextLight","captionText","caption","actionContainer","likeButtonLiked","likeButtonDisliked","likeTextLight","likeText","StyleSheet","create","flex","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","justifyContent","alignItems","resizeMode","color","fontSize","marginTop","alignSelf","paddingTop","borderColor","borderWidth","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nexport default class PostCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            light_theme: true,\r\n            post_id: this.props.post.key,\r\n            post_data: this.props.post.value,\r\n            is_liked: false,\r\n            likes: this.props.post.value.likes\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUser();\r\n    }\r\n\r\n    fetchUser = () => {\r\n        let theme;\r\n        firebase\r\n            .database()\r\n            .ref(\"/users/\" + firebase.auth().currentUser.uid)\r\n            .on(\"value\", (snapshot) => {\r\n                theme = snapshot.val().current_theme\r\n                this.setState({ light_theme: theme === \"light\" })\r\n            })\r\n    }\r\n\r\n    likeAction = () => {\r\n        if (this.state.is_liked) {\r\n            firebase\r\n                .database()\r\n                .ref(\"posts\")\r\n                .child(this.state.post_id)\r\n                .child(\"likes\")\r\n                .set(firebase.database.ServerValue.increment(-1));\r\n            this.setState({ likes: (this.state.likes -= 1), is_liked: false });\r\n        } else {\r\n            firebase\r\n                .database()\r\n                .ref(\"posts\")\r\n                .child(this.state.post_id)\r\n                .child(\"likes\")\r\n                .set(firebase.database.ServerValue.increment(1));\r\n            this.setState({ likes: (this.state.likes += 1), is_liked: true });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let post = this.state.post_data\r\n        let images = {\r\n            image_1: require(\"../assets/image_1.jpg\"),\r\n            image_2: require(\"../assets/image_2.jpg\"),\r\n            image_3: require(\"../assets/image_3.jpg\"),\r\n            image_4: require(\"../assets/image_4.jpg\"),\r\n            image_5: require(\"../assets/image_5.jpg\"),\r\n            image_6: require(\"../assets/image_6.jpg\"),\r\n            image_7: require(\"../assets/image_7.jpg\")\r\n        };\r\n        return (\r\n            <TouchableOpacity style={styles.container} onPress={() => this.props.navigation.navigate(\"PostScreen\", post = this.props.post)}>\r\n                <View style={this.state.light_theme ? styles.cardContainerLight : styles.cardContainer}>\r\n                    <View style={styles.authorContainer}>\r\n                        <View style={styles.authorImageContainer}>\r\n                            <Image\r\n                                source={{ uri: post.profile_image }}\r\n                                style={styles.profileImage}\r\n                            ></Image>\r\n                        </View>\r\n                        <View style={styles.authorNameContainer}>\r\n                            <Text style={this.state.light_theme ? styles.authorNameTextLight : styles.authorNameText}>{post.author}</Text>\r\n                        </View>\r\n                    </View>\r\n                    <Image source={images[post.preview_image]} style={styles.postImage} />\r\n                    <View style={styles.captionContainer}>\r\n                        <Text style={this.state.light_theme ? styles.captionTextLight : styles.captionText}>\r\n                            {post.caption}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={styles.actionContainer}>\r\n                        <TouchableOpacity\r\n                            style={\r\n                                this.state.is_liked\r\n                                    ? styles.likeButtonLiked\r\n                                    : styles.likeButtonDisliked\r\n                            }\r\n                            onPress={() => this.likeAction()}\r\n                        >\r\n                            <Ionicons\r\n                                name={\"heart\"}\r\n                                size={RFValue(30)}\r\n                                color={this.state.light_theme ? \"black\" : \"white\"}\r\n                            />\r\n\r\n                            <Text\r\n                                style={\r\n                                    this.state.light_theme\r\n                                        ? styles.likeTextLight\r\n                                        : styles.likeText\r\n                                }\r\n                            >\r\n                                {this.state.likes}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    cardContainer: {\r\n        margin: RFValue(13),\r\n        backgroundColor: \"#2a2a2a\",\r\n        borderRadius: RFValue(20),\r\n        padding: RFValue(20)\r\n    },\r\n    cardContainerLight: {\r\n        margin: RFValue(13),\r\n\r\n        backgroundColor: \"white\",\r\n        borderRadius: RFValue(20),\r\n        shadowColor: \"rgb(0, 0, 0)\",\r\n        shadowOffset: {\r\n            width: 3,\r\n            height: 3\r\n        },\r\n        shadowOpacity: RFValue(0.5),\r\n        shadowRadius: RFValue(5),\r\n        elevation: RFValue(2),\r\n        padding: RFValue(20)\r\n    },\r\n    authorContainer: {\r\n        flex: 0.1,\r\n        flexDirection: \"row\"\r\n    },\r\n    authorImageContainer: {\r\n        flex: 0.15,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    profileImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        resizeMode: \"contain\",\r\n        borderRadius: RFValue(100)\r\n    },\r\n    authorNameContainer: {\r\n        flex: 0.85,\r\n        justifyContent: \"center\"\r\n    },\r\n    authorNameText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(20)\r\n    },\r\n    authorNameTextLight: {\r\n        color: \"black\",\r\n        fontSize: RFValue(20)\r\n    },\r\n    postImage: {\r\n        marginTop: RFValue(20),\r\n        resizeMode: \"contain\",\r\n        width: \"100%\",\r\n        alignSelf: \"center\",\r\n        height: RFValue(275)\r\n    },\r\n    captionContainer: {},\r\n    captionText: {\r\n        fontSize: 13,\r\n        color: \"white\",\r\n        paddingTop: RFValue(10)\r\n    },\r\n    captionTextLight: {\r\n        fontSize: 13,\r\n        color: \"black\",\r\n        paddingTop: RFValue(10)\r\n    },\r\n    actionContainer: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: RFValue(10)\r\n    },\r\n    likeButtonLiked: {\r\n        width: RFValue(160),\r\n        height: RFValue(40),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"#eb3948\",\r\n        borderRadius: RFValue(30)\r\n    },\r\n    likeButtonDisliked: {\r\n        width: RFValue(160),\r\n        height: RFValue(40),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        borderColor: \"#eb3948\",\r\n        borderWidth: 2,\r\n        borderRadius: RFValue(30)\r\n    },\r\n    likeText: {\r\n        color: \"white\",\r\n        fontSize: 25,\r\n        marginLeft: 25,\r\n        marginTop: 6\r\n    },\r\n    likeTextLight: {\r\n        fontSize: 25,\r\n        marginLeft: 25,\r\n        marginTop: 6\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}