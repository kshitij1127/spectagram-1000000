{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kshitij\\\\Desktop\\\\spectagram-stage-9\\\\screens\\\\Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport firebase from \"firebase\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isEnabled: false,\n      light_theme: true,\n      profile_image: \"\",\n      name: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"toggleSwitch\",\n    value: function toggleSwitch() {\n      var previous_state = this.state.isEnabled;\n      var theme = !this.state.isEnabled ? \"dark\" : \"light\";\n      var updates = {};\n      updates[\"/users/\" + firebase.auth().currentUser.uid + \"/current_theme\"] = theme;\n      firebase.database().ref().update(updates);\n      this.setState({\n        isEnabled: !previous_state,\n        light_theme: previous_state\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUser();\n    }\n  }, {\n    key: \"fetchUser\",\n    value: function fetchUser() {\n      var theme, name, image;\n      return _regeneratorRuntime.async(function fetchUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n                theme = snapshot.val().current_theme;\n                name = snapshot.val().first_name + \" \" + snapshot.val().last_name;\n                image = snapshot.val().profile_picture;\n              }));\n\n            case 2:\n              this.setState({\n                light_theme: theme === \"light\" ? true : false,\n                isEnabled: theme === \"light\" ? false : true,\n                name: name,\n                profile_image: image\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: this.state.light_theme ? styles.containerLight : styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(SafeAreaView, {\n        style: styles.droidSafeArea,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.appTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.appIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: styles.iconImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.appTitleTextContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, \"Spectagram\"))), React.createElement(View, {\n        style: styles.screenContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.profileImageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: this.state.profile_image\n        },\n        style: styles.profileImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: this.state.light_theme ? styles.nameTextLight : styles.nameText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, this.state.name)), React.createElement(View, {\n        style: styles.themeContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: this.state.light_theme ? styles.themeTextLight : styles.themeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Dark Theme\"), React.createElement(Switch, {\n        style: {\n          transform: [{\n            scaleX: 1.3\n          }, {\n            scaleY: 1.3\n          }]\n        },\n        trackColor: {\n          false: \"#767577\",\n          true: this.state.light_theme ? \"#eee\" : \"white\"\n        },\n        thumbColor: this.state.isEnabled ? \"#ee8249\" : \"#f4f3f4\",\n        ios_backgroundColor: \"#3e3e3e\",\n        onValueChange: function onValueChange() {\n          return _this2.toggleSwitch();\n        },\n        value: this.state.isEnabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 0.08\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport { Profile as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28)\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28)\n  },\n  screenContainer: {\n    flex: 0.85\n  },\n  profileImageContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileImage: {\n    width: RFValue(140),\n    height: RFValue(140),\n    borderRadius: RFValue(70)\n  },\n  nameText: {\n    color: \"white\",\n    fontSize: RFValue(40),\n    marginTop: RFValue(10)\n  },\n  nameTextLight: {\n    color: \"black\",\n    fontSize: RFValue(40),\n    marginTop: RFValue(10)\n  },\n  themeContainer: {\n    flex: 0.2,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: RFValue(20)\n  },\n  themeText: {\n    color: \"white\",\n    fontSize: RFValue(20),\n    marginRight: RFValue(15)\n  },\n  themeTextLight: {\n    color: \"black\",\n    fontSize: RFValue(20),\n    marginRight: RFValue(15)\n  }\n});","map":{"version":3,"sources":["C:/Users/kshitij/Desktop/spectagram-stage-9/screens/Profile.js"],"names":["React","Component","RFValue","firebase","Profile","props","state","isEnabled","light_theme","profile_image","name","previous_state","theme","updates","auth","currentUser","uid","database","ref","update","setState","fetchUser","on","snapshot","val","current_theme","first_name","last_name","image","profile_picture","styles","containerLight","container","droidSafeArea","appTitle","appIcon","require","iconImage","appTitleTextContainer","appTitleTextLight","appTitleText","screenContainer","profileImageContainer","uri","profileImage","nameTextLight","nameText","themeContainer","themeTextLight","themeText","transform","scaleX","scaleY","false","true","toggleSwitch","flex","StyleSheet","create","backgroundColor","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","borderRadius","marginRight"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAWA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,WAAW,EAAE,IAFJ;AAGTC,MAAAA,aAAa,EAAE,EAHN;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAFe;AAQlB;;;;WAED,wBAAe;AACX,UAAMC,cAAc,GAAG,KAAKL,KAAL,CAAWC,SAAlC;AACA,UAAMK,KAAK,GAAG,CAAC,KAAKN,KAAL,CAAWC,SAAZ,GAAwB,MAAxB,GAAiC,OAA/C;AACA,UAAIM,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CACH,YAAYV,QAAQ,CAACW,IAAT,GAAgBC,WAAhB,CAA4BC,GAAxC,GAA8C,gBAD3C,CAAP,GAEIJ,KAFJ;AAGAT,MAAAA,QAAQ,CACHc,QADL,GAEKC,GAFL,GAGKC,MAHL,CAGYN,OAHZ;AAIA,WAAKO,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAE,CAACI,cAAd;AAA8BH,QAAAA,WAAW,EAAEG;AAA3C,OAAd;AACH;;;WAED,6BAAoB;AAChB,WAAKU,SAAL;AACH;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUlB,QAAQ,CACTc,QADC,GAEDC,GAFC,CAEG,YAAYf,QAAQ,CAACW,IAAT,GAAgBC,WAAhB,CAA4BC,GAF3C,EAGDM,EAHC,CAGE,OAHF,EAGW,UAAUC,QAAV,EAAoB;AAC7BX,gBAAAA,KAAK,GAAGW,QAAQ,CAACC,GAAT,GAAeC,aAAvB;AACAf,gBAAAA,IAAI,GAAMa,QAAQ,CAACC,GAAT,GAAeE,UAArB,SAAmCH,QAAQ,CAACC,GAAT,GAAeG,SAAtD;AACAC,gBAAAA,KAAK,GAAGL,QAAQ,CAACC,GAAT,GAAeK,eAAvB;AACH,eAPC,CAFV;;AAAA;AAUI,mBAAKT,QAAL,CAAc;AACVZ,gBAAAA,WAAW,EAAEI,KAAK,KAAK,OAAV,GAAoB,IAApB,GAA2B,KAD9B;AAEVL,gBAAAA,SAAS,EAAEK,KAAK,KAAK,OAAV,GAAoB,KAApB,GAA4B,IAF7B;AAGVF,gBAAAA,IAAI,EAAEA,IAHI;AAIVD,gBAAAA,aAAa,EAAEmB;AAJL,eAAd;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAkBA,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AACI,QAAA,KAAK,EACD,KAAKtB,KAAL,CAAWE,WAAX,GAAyBsB,MAAM,CAACC,cAAhC,GAAiDD,MAAM,CAACE,SAFhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEF,MAAM,CAACG,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAEC,OAAO,sBADnB;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACO,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,KAAK,EACD,KAAKhC,KAAL,CAAWE,WAAX,GACMsB,MAAM,CAACS,iBADb,GAEMT,MAAM,CAACU,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAPJ,CANJ,EAyBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACY,qBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,KAAKrC,KAAL,CAAWG;AAAlB,SADZ;AAEI,QAAA,KAAK,EAAEqB,MAAM,CAACc,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,IAAD;AACI,QAAA,KAAK,EACD,KAAKtC,KAAL,CAAWE,WAAX,GACMsB,MAAM,CAACe,aADb,GAEMf,MAAM,CAACgB,QAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOK,KAAKxC,KAAL,CAAWI,IAPhB,CALJ,CADJ,EAgBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEoB,MAAM,CAACiB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,KAAK,EACD,KAAKzC,KAAL,CAAWE,WAAX,GACMsB,MAAM,CAACkB,cADb,GAEMlB,MAAM,CAACmB,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAWI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,CAAC;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAD,EAAkB;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAlB;AAAb,SADX;AAEI,QAAA,UAAU,EAAE;AACRC,UAAAA,KAAK,EAAE,SADC;AAERC,UAAAA,IAAI,EAAE,KAAKhD,KAAL,CAAWE,WAAX,GAAyB,MAAzB,GAAkC;AAFhC,SAFhB;AAMI,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC,SAAX,GAAuB,SAAvB,GAAmC,SANnD;AAOI,QAAA,mBAAmB,EAAC,SAPxB;AAQI,QAAA,aAAa,EAAE;AAAA,iBAAM,MAAI,CAACgD,YAAL,EAAN;AAAA,SARnB;AASI,QAAA,KAAK,EAAE,KAAKjD,KAAL,CAAWC,SATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CAhBJ,EAuCI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEiD,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvCJ,CAzBJ,EAkEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlEJ,CADJ;AAsEH;;;;EAtHgCvD,S;;SAAhBG,O;AAyHrB,IAAM0B,MAAM,GAAG2B,UAAU,CAACC,MAAX,CAAkB;AAC7B1B,EAAAA,SAAS,EAAE;AACPwB,IAAAA,IAAI,EAAE,CADC;AAEPG,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7B5B,EAAAA,cAAc,EAAE;AACZyB,IAAAA,IAAI,EAAE,CADM;AAEZG,IAAAA,eAAe,EAAE;AAFL,GALa;AAS7B1B,EAAAA,aAAa,EAAE;AACX2B,IAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,SAAS,CAACC,aAAtC,GAAsD9D,OAAO,CAAC,EAAD;AAD7D,GATc;AAY7BgC,EAAAA,QAAQ,EAAE;AACNsB,IAAAA,IAAI,EAAE,IADA;AAENS,IAAAA,aAAa,EAAE;AAFT,GAZmB;AAgB7B9B,EAAAA,OAAO,EAAE;AACLqB,IAAAA,IAAI,EAAE,GADD;AAELU,IAAAA,cAAc,EAAE,QAFX;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAhBoB;AAqB7B9B,EAAAA,SAAS,EAAE;AACP+B,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,UAAU,EAAE;AAHL,GArBkB;AA0B7BhC,EAAAA,qBAAqB,EAAE;AACnBkB,IAAAA,IAAI,EAAE,GADa;AAEnBU,IAAAA,cAAc,EAAE;AAFG,GA1BM;AA8B7B1B,EAAAA,YAAY,EAAE;AACV+B,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,QAAQ,EAAEtE,OAAO,CAAC,EAAD;AAFP,GA9Be;AAkC7BqC,EAAAA,iBAAiB,EAAE;AACfgC,IAAAA,KAAK,EAAE,OADQ;AAEfC,IAAAA,QAAQ,EAAEtE,OAAO,CAAC,EAAD;AAFF,GAlCU;AAsC7BuC,EAAAA,eAAe,EAAE;AACbe,IAAAA,IAAI,EAAE;AADO,GAtCY;AAyC7Bd,EAAAA,qBAAqB,EAAE;AACnBc,IAAAA,IAAI,EAAE,GADa;AAEnBU,IAAAA,cAAc,EAAE,QAFG;AAGnBC,IAAAA,UAAU,EAAE;AAHO,GAzCM;AA8C7BvB,EAAAA,YAAY,EAAE;AACVwB,IAAAA,KAAK,EAAElE,OAAO,CAAC,GAAD,CADJ;AAEVmE,IAAAA,MAAM,EAAEnE,OAAO,CAAC,GAAD,CAFL;AAGVuE,IAAAA,YAAY,EAAEvE,OAAO,CAAC,EAAD;AAHX,GA9Ce;AAoD7B4C,EAAAA,QAAQ,EAAE;AACNyB,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAEtE,OAAO,CAAC,EAAD,CAFX;AAGN0D,IAAAA,SAAS,EAAE1D,OAAO,CAAC,EAAD;AAHZ,GApDmB;AAyD7B2C,EAAAA,aAAa,EAAE;AACX0B,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,QAAQ,EAAEtE,OAAO,CAAC,EAAD,CAFN;AAGX0D,IAAAA,SAAS,EAAE1D,OAAO,CAAC,EAAD;AAHP,GAzDc;AA8D7B6C,EAAAA,cAAc,EAAE;AACZS,IAAAA,IAAI,EAAE,GADM;AAEZS,IAAAA,aAAa,EAAE,KAFH;AAGZC,IAAAA,cAAc,EAAE,QAHJ;AAIZN,IAAAA,SAAS,EAAE1D,OAAO,CAAC,EAAD;AAJN,GA9Da;AAoE7B+C,EAAAA,SAAS,EAAE;AACPsB,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,QAAQ,EAAEtE,OAAO,CAAC,EAAD,CAFV;AAGPwE,IAAAA,WAAW,EAAExE,OAAO,CAAC,EAAD;AAHb,GApEkB;AAyE7B8C,EAAAA,cAAc,EAAE;AACZuB,IAAAA,KAAK,EAAE,OADK;AAEZC,IAAAA,QAAQ,EAAEtE,OAAO,CAAC,EAAD,CAFL;AAGZwE,IAAAA,WAAW,EAAExE,OAAO,CAAC,EAAD;AAHR;AAzEa,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    SafeAreaView,\r\n    Platform,\r\n    StatusBar,\r\n    Image,\r\n    Switch\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEnabled: false,\r\n            light_theme: true,\r\n            profile_image: \"\",\r\n            name: \"\"\r\n        };\r\n    }\r\n\r\n    toggleSwitch() {\r\n        const previous_state = this.state.isEnabled;\r\n        const theme = !this.state.isEnabled ? \"dark\" : \"light\";\r\n        var updates = {};\r\n        updates[\r\n            \"/users/\" + firebase.auth().currentUser.uid + \"/current_theme\"\r\n        ] = theme;\r\n        firebase\r\n            .database()\r\n            .ref()\r\n            .update(updates);\r\n        this.setState({ isEnabled: !previous_state, light_theme: previous_state });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchUser();\r\n    }\r\n\r\n    async fetchUser() {\r\n        let theme, name, image;\r\n        await firebase\r\n            .database()\r\n            .ref(\"/users/\" + firebase.auth().currentUser.uid)\r\n            .on(\"value\", function (snapshot) {\r\n                theme = snapshot.val().current_theme;\r\n                name = `${snapshot.val().first_name} ${snapshot.val().last_name}`;\r\n                image = snapshot.val().profile_picture;\r\n            });\r\n        this.setState({\r\n            light_theme: theme === \"light\" ? true : false,\r\n            isEnabled: theme === \"light\" ? false : true,\r\n            name: name,\r\n            profile_image: image\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View\r\n                style={\r\n                    this.state.light_theme ? styles.containerLight : styles.container\r\n                }\r\n            >\r\n                <SafeAreaView style={styles.droidSafeArea} />\r\n                <View style={styles.appTitle}>\r\n                    <View style={styles.appIcon}>\r\n                        <Image\r\n                            source={require(\"../assets/logo.png\")}\r\n                            style={styles.iconImage}\r\n                        ></Image>\r\n                    </View>\r\n                    <View style={styles.appTitleTextContainer}>\r\n                        <Text\r\n                            style={\r\n                                this.state.light_theme\r\n                                    ? styles.appTitleTextLight\r\n                                    : styles.appTitleText\r\n                            }\r\n                        >\r\n                            Spectagram\r\n                  </Text>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.screenContainer}>\r\n                    <View style={styles.profileImageContainer}>\r\n                        <Image\r\n                            source={{ uri: this.state.profile_image }}\r\n                            style={styles.profileImage}\r\n                        ></Image>\r\n                        <Text\r\n                            style={\r\n                                this.state.light_theme\r\n                                    ? styles.nameTextLight\r\n                                    : styles.nameText\r\n                            }\r\n                        >\r\n                            {this.state.name}\r\n                        </Text>\r\n                    </View>\r\n                    <View style={styles.themeContainer}>\r\n                        <Text\r\n                            style={\r\n                                this.state.light_theme\r\n                                    ? styles.themeTextLight\r\n                                    : styles.themeText\r\n                            }\r\n                        >\r\n                            Dark Theme\r\n                  </Text>\r\n\r\n                        <Switch\r\n                            style={{ transform: [{ scaleX: 1.3 }, { scaleY: 1.3 }] }}\r\n                            trackColor={{\r\n                                false: \"#767577\",\r\n                                true: this.state.light_theme ? \"#eee\" : \"white\"\r\n                            }}\r\n                            thumbColor={this.state.isEnabled ? \"#ee8249\" : \"#f4f3f4\"}\r\n                            ios_backgroundColor=\"#3e3e3e\"\r\n                            onValueChange={() => this.toggleSwitch()}\r\n                            value={this.state.isEnabled}\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex: 0.3 }} />\r\n                </View>\r\n                <View style={{ flex: 0.08 }} />\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"black\"\r\n    },\r\n    containerLight: {\r\n        flex: 1,\r\n        backgroundColor: \"white\"\r\n    },\r\n    droidSafeArea: {\r\n        marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\r\n    },\r\n    appTitle: {\r\n        flex: 0.07,\r\n        flexDirection: \"row\"\r\n    },\r\n    appIcon: {\r\n        flex: 0.3,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    iconImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        resizeMode: \"contain\"\r\n    },\r\n    appTitleTextContainer: {\r\n        flex: 0.7,\r\n        justifyContent: \"center\"\r\n    },\r\n    appTitleText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(28),\r\n    },\r\n    appTitleTextLight: {\r\n        color: \"black\",\r\n        fontSize: RFValue(28),\r\n    },\r\n    screenContainer: {\r\n        flex: 0.85\r\n    },\r\n    profileImageContainer: {\r\n        flex: 0.5,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    profileImage: {\r\n        width: RFValue(140),\r\n        height: RFValue(140),\r\n        borderRadius: RFValue(70)\r\n    },\r\n\r\n    nameText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(40),\r\n        marginTop: RFValue(10)\r\n    },\r\n    nameTextLight: {\r\n        color: \"black\",\r\n        fontSize: RFValue(40),\r\n        marginTop: RFValue(10)\r\n    },\r\n    themeContainer: {\r\n        flex: 0.2,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        marginTop: RFValue(20)\r\n    },\r\n    themeText: {\r\n        color: \"white\",\r\n        fontSize: RFValue(20),\r\n        marginRight: RFValue(15)\r\n    },\r\n    themeTextLight: {\r\n        color: \"black\",\r\n        fontSize: RFValue(20),\r\n        marginRight: RFValue(15)\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}